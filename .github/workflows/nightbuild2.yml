# This is a basic workflow to help you get started with Actions

name: BuildRelease2

# Controls when the workflow will run 
on:
  #schedule:
    # * is a special character in YAML so you have to quote this string
    # NOTE : The time is badly set somewhere as it is NOT UTC.
    # This cron run at midnight with 0 4....
   # - cron:  '0 4 * * *'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      gitRev:
        description: 'git rev or tag to build. default: head of current branch'
        required: false
        default: ''
      debVersion:
        description: 'Version for .deb (ex YYYY.MM.DD), if empty : nightbuild autogenerated name. NOTE : for official release, put the same name here than the tag'
        required: false
        default: ''
      skipAptGet: 
        description: 'skip apt get'
        required: false
        default: ''
      skipCheckout: 
        description: 'skip checkout'
        required: false
        default: ''
      skipBuild: 
        description: 'skip build'
        required: false
        default: ''
      buildOptions:
        description: 'option to pass to buildall script (ex: "--build ltrx")'
        required: false
        default: '-v'
      skipDebian: 
        description: 'skip debian build'
        required: false
        default: ''

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    #runs-on: ubuntu-latest
    runs-on: self-hosted
    timeout-minutes: 140

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Check out repo
        run: | 
          if [ -z "${{ github.event.inputs.skipCheckout }}" ]; then
            echo "DO checkout"
          else
            echo "skip checkout"
          fi
      - name: running script setup_ubuntu.sh (apt get package)
        run: |
          if [ -z "${{ github.event.inputs.skipAptGet }}" ]; then
            echo "DO (apt get)"
          else
            echo "Skip scripts/setup_ubuntu.sh (apt get)"
          fi
      ## This gitaction didn't seems to work.. lots of error when fetching some submodules. This is why I do it manually above
        # uses: actions/checkout@v2
        # with:
        #   submodules: 'true'
        #   fetch-depth: '0'

      - name: Building LTRX
        run: |
          if [ -z "${{ github.event.inputs.skipBuild }}" ]; then
            echo "DO ALL the build"
          else
            echo "skip ALL the build"
          fi
          
      - name: Release .deb LTRX
        run: |
          if [ -z "${{ github.event.inputs.skipDebian }}" ]; then
            echo "DO Release .deb"
          else
            echo "Skip Release .deb"
          fi

      - name: Copy .deb LTRX to permanent storage
        run: |
          if [ -z "${{ github.event.inputs.skipDebian }}" ]; then
            echo "DO copy .deb"
          else
            echo "Skip copy .deb"
          fi
